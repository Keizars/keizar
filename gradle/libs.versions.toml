[versions]
kotlin = "2.0.0-Beta4"
coroutines = "1.7.3"
mongodb-driver-kotlin-coroutine = "4.10.1"
serialization = "1.6.2"
voyager = "1.0.0"
atomicfu = "0.21.0"
ktor = "2.3.7"
koin = "3.5.3"
slf4j = "2.0.7"
jsoup = "1.15.4"
android-gradle-plugin = "8.2.2"
accompanist = "0.33.2-alpha"
datastore = "1.0.0"
libtorrent4j = "2.1.0-31"
androidx-lifecycle = "2.7.0"
postgres_version = "42.5.1"
h2_version = "2.1.214"
retrofit = "2.9.0"
retrofit-kotlinx-serialization = "1.0.0"
coil = "3.0.0-alpha06"
dynamodb_version = "2.17.100"

jetpack-compose = "1.6.2"
# https://androidx.dev/storage/compose-compiler/repository
jetpack-compose-compiler = "1.5.11-dev-k2.0.0-Beta4-21f5e479a96" # used by android
# https://github.com/JetBrains/compose-multiplatform/releases
# https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compatibility-and-versioning.html#use-a-developer-version-of-compose-multiplatform-compiler
compose-multiplatform = "1.6.0"
# https://maven.pkg.jetbrains.space/public/p/compose/dev/org/jetbrains/compose/compiler/compiler/
compose-multiplatform-compiler = "1.5.9-kt-2.0.0-Beta4"

[libraries]
# Build
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }
android-library-gradle-plugin = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "android-gradle-plugin" }
android-application-gradle-plugin = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "android-gradle-plugin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
atomicfu-gradle-plugin = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }
compose-multiplatfrom-gradle-plugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-multiplatform" }

# Kotlinx
#kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "0.5.0" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serialization" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
#kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serialization" }

# Ktor
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-websocket-jvm = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }

# Retrofit
mongodb-driver-kotlin-coroutine = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb-driver-kotlin-coroutine" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlinx-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-kotlinx-serialization" }

# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

# Yamlkt
directories = { module = "dev.dirs:directories", version = "26" }

# Slf4j
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

# Kamel - multiplatform image loading
kamel-image = { module = "media.kamel:kamel-image", version = "0.9.1" }

# Jsoup - HTML parsing (for dmhy)
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# Torrent
libtorrent4j = { module = "org.libtorrent4j:libtorrent4j", version.ref = "libtorrent4j" }
libtorrent4j-android-arm64 = { module = "org.libtorrent4j:libtorrent4j-android-arm64", version.ref = "libtorrent4j" }
libtorrent4j-macos = { module = "org.libtorrent4j:libtorrent4j-macos", version.ref = "libtorrent4j" }
libtorrent4j-windows = { module = "org.libtorrent4j:libtorrent4j-winds", version.ref = "libtorrent4j" }
libtorrent4j-linux = { module = "org.libtorrent4j:libtorrent4j-linux", version.ref = "libtorrent4j" }

# Android Datastore
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }

# Android Accompanist
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "accompanist" }
accompanist-placeholder-material = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }

# Navigation
precompose = { module = "moe.tlaster:precompose", version = "1.5.10" }
precompose-koin = { module = "moe.tlaster:precompose-koin", version = "1.5.10" }
precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version = "1.5.10" }
#voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
#voyager-screenModel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
#voyager-bottomSheetNavigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }
#voyager-tabNavigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
#voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
#voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
#voyager-hilt = { module = "cafe.adriel.voyager:voyager-hilt", version.ref = "voyager" }
#voyager-kodein = { module = "cafe.adriel.voyager:voyager-kodein", version.ref = "voyager" }
#voyager-rxjava = { module = "cafe.adriel.voyager:voyager-rxjava", version.ref = "voyager" }


# Android-only libraries
# Each library has its own version, so we don't use `Versions` here.
androidx-core-ktx = { module = "androidx.core:core-ktx", version = "1.12.0" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.8.2" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version = "1.1.0" }
androidx-material = { module = "com.google.android.material:material", version = "1.11.0" }
androidx-material3-window-size-class0 = { module = "androidx.compose.material3:material3-window-size-class", version = "1.1.2" }
androidx-browser = { module = "androidx.browser:browser", version = "1.7.0" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version = "2.7.6" }
slf4j-android = { module = "uk.uuid.slf4j:slf4j-android", version = "2.0.7-0" }

androidx-media3-ui = { module = "androidx.media3:media3-ui", version = "1.2.0" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version = "1.2.0" }

androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "jetpack-compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "jetpack-compose" }
androidx-compose-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding", version.ref = "jetpack-compose" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "jetpack-compose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "jetpack-compose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version = "1.2.0-beta02" }
androidx-compose-icons-extended = { module = "androidx.compose.material:material-icons-extended", version = "1.5.4" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "jetpack-compose" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Coil
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }

# compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "jetpackCompose" }

# databases
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres_version" }
h2database = { module = "com.h2database:h2", version.ref = "h2_version" }
dynamodb = { module = "software.amazon.awssdk:dynamodb", version.ref = "dynamodb_version" }
